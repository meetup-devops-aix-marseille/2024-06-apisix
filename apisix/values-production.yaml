replicaCount: 3

podDisruptionBudget:
  # Waiting for helm chart version 2.8.1 or higher
  enabled: false
  maxUnavailable: 1

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

serviceAccount:
  create: true
  annotations: {}
  name: apisix-api-gateway

rbac:
  create: true

ingress:
  enabled: true
  hosts:
    - host: api.placeholder.com
      paths:
        - /
  tls:
    - secretName: api-placeholder-com-tls
      hosts:
        - api.placeholder.com

metrics:
  serviceMonitor:
    enabled: true

admin:
  credentials:
    secretName: "apisix-admin-credentials"
    secretAdminKey: "admin"
    secretViewerKey: "viewer"

apisix:
  # ssl:
  #   enabled: true
  #   secretName: apisix-tls

  admin:
    enabled: true
    # -- which ip to listen on for Apache APISIX admin API. Set to `"[::]"` when on IPv6 single stack
    # ip: 10.0.0.0
    credentials:
      secretName: "apisix-admin-credentials"
      secretAdminKey: "admin"
      secretViewerKey: "viewer"

  discovery:
    enabled: true
    registry:
      kubernetes: {}
      dns:
        servers:
          # Ip address of the DNS server on staging
          - 10.40.0.10:53

  prometheus:
    # ref: https://apisix.apache.org/docs/apisix/plugins/prometheus/
    enabled: true

  # Mandatory configuration, otherwise custom plugins will not be added to the plugin list
  plugins:
    - real-ip # priority: 23000
    - ai # priority: 22900
    - client-control # priority: 22000
    - proxy-control # priority: 21990
    - request-id # priority: 12015
    # - zipkin # priority: 12011
    #- skywalking                    # priority: 12010
    #- opentelemetry                 # priority: 12009
    - ext-plugin-pre-req # priority: 12000
    - fault-injection # priority: 11000
    - mocking # priority: 10900
    - serverless-pre-function # priority: 10000
    #- batch-requests                # priority: 4010
    - cors # priority: 4000
    - ip-restriction # priority: 3000
    - ua-restriction # priority: 2999
    - referer-restriction # priority: 2990
    - csrf # priority: 2980
    - uri-blocker # priority: 2900
    - request-validation # priority: 2800
    - chaitin-waf # priority: 2700
    - multi-auth # priority: 2600
    - openid-connect # priority: 2599
    - cas-auth # priority: 2597
    - authz-casbin # priority: 2560
    - authz-casdoor # priority: 2559
    - wolf-rbac # priority: 2555
    - ldap-auth # priority: 2540
    - hmac-auth # priority: 2530
    - basic-auth # priority: 2520
    - jwt-auth # priority: 2510
    - jwe-decrypt # priority: 2509
    - key-auth # priority: 2500
    - consumer-restriction # priority: 2400
    - forward-auth # priority: 2002
    - opa # priority: 2001
    - authz-keycloak # priority: 2000
    #- error-log-logger              # priority: 1091
    - proxy-cache # priority: 1085
    - body-transformer # priority: 1080
    - proxy-mirror # priority: 1010
    - proxy-rewrite # priority: 1008
    - workflow # priority: 1006
    - api-breaker # priority: 1005
    - limit-conn # priority: 1003
    - limit-count # priority: 1002
    - limit-req # priority: 1001
    #- node-status                   # priority: 1000
    #- brotli                        # priority: 996
    - gzip # priority: 995
    - server-info # priority: 990
    - traffic-split # priority: 966
    - redirect # priority: 900
    - response-rewrite # priority: 899
    - degraphql # priority: 509
    - kafka-proxy # priority: 508
    #- dubbo-proxy                   # priority: 507
    - grpc-transcode # priority: 506
    - grpc-web # priority: 505
    - http-dubbo # priority: 504
    - public-api # priority: 501
    - prometheus # priority: 500
    - datadog # priority: 495
    - loki-logger # priority: 414
    - elasticsearch-logger # priority: 413
    - echo # priority: 412
    - loggly # priority: 411
    - http-logger # priority: 410
    - splunk-hec-logging # priority: 409
    - skywalking-logger # priority: 408
    - google-cloud-logging # priority: 407
    - sls-logger # priority: 406
    - tcp-logger # priority: 405
    - kafka-logger # priority: 403
    - rocketmq-logger # priority: 402
    - syslog # priority: 401
    - udp-logger # priority: 400
    - file-logger # priority: 399
    - clickhouse-logger # priority: 398
    - tencent-cloud-cls # priority: 397
    - inspect # priority: 200
    #- log-rotate                    # priority: 100
    # <- recommend to use priority (0, 100) for your custom plugins
    - example-plugin # priority: 0
    #- gm                            # priority: -43
    #- ocsp-stapling                 # priority: -44
    # - aws-lambda # priority: -1899
    # - azure-functions # priority: -1900
    - openwhisk # priority: -1901
    - openfunction # priority: -1902
    - serverless-post-function # priority: -2000
    - ext-plugin-post-req # priority: -3000
    - ext-plugin-post-resp # priority: -4000

  customPlugins:
    enabled: true
    plugins:
      - name: zitadel-oidc
        configMap:
          name: apisix-custom-plugins
          mounts:
            - key: zitadel-oidc.lua
              path: /opts/custom_plugins/apisix/plugins/zitadel-oidc.lua

etcd:
  auth:
    rbac:
      create: true
      allowNoneAuthentication: false
      # this name is mandatory and cant be changed  {{- template "common.names.fullname" .Subcharts.etcd }}
      existingSecret: "apisix-etcd"
      # this key is mandatory and cant be changed {{- print "etcd-root-password" }}
      existingSecretPasswordKey: "etcd-root-password"
  # Avoid etcd restart issues
  removeMemberOnContainerTermination: false
  persistence:
    size: 2Gi
  livenessProbe:
    initialDelaySeconds: 0
  readinessProbe:
    initialDelaySeconds: 0
  startupProbe:
    enabled: true
    initialDelaySeconds: 0
    timeoutSeconds: 1
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 60
  metrics:
    enabled: true
    podMonitor:
      namespace: apisix
      enabled: true
    prometheusRule:
      enabled: false
  startFromSnapshot:
    enabled: false
    # existingClaim: etcd-snapshot
    # snapshotFilename: snapshot.db

  disasterRecovery:
    enabled: false
    # cronjob:
    #   schedule: "*/30 * * * *"
    #   successfulJobsHistoryLimit: 10
    #   failedJobsHistoryLimit: 10
    # pvc:
    #   storageClassName:

dashboard:
  enabled: true
  config:
    authentication:
      users:
        - username: admin
          password: meetup062024
    conf:
      etcd:
        username: root
        password: changemeimnotsecure
      plugins:
        - api-breaker
        - authz-casbin
        - authz-casdoor
        - authz-keycloak
        - aws-lambda
        - azure-functions
        - basic-auth
        - clickhouse-logger
        - client-control
        - consumer-restriction
        - cors
        - csrf
        - datadog
        - echo
        - error-log-logger
        - ext-plugin-post-req
        - ext-plugin-post-resp
        - ext-plugin-pre-req
        - fault-injection
        - file-logger
        - forward-auth
        - google-cloud-logging
        - grpc-transcode
        - grpc-web
        - gzip
        - hmac-auth
        - http-logger
        - ip-restriction
        - jwt-auth
        - kafka-logger
        - kafka-proxy
        - key-auth
        - ldap-auth
        - limit-conn
        - limit-count
        - limit-req
        - loggly
        - mocking
        - opa
        - openid-connect
        - opentelemetry
        - openwhisk
        - prometheus
        - proxy-cache
        - proxy-control
        - proxy-mirror
        - proxy-rewrite
        - public-api
        - real-ip
        - redirect
        - referer-restriction
        - request-id
        - request-validation
        - response-rewrite
        - rocketmq-logger
        - server-info
        - serverless-post-function
        - serverless-pre-function
        - skywalking
        - skywalking-logger
        - sls-logger
        - splunk-hec-logging
        - syslog
        - tcp-logger
        - traffic-split
        - ua-restriction
        - udp-logger
        - uri-blocker
        - wolf-rbac
        - zipkin
        - elasticsearch-logger
        - openfunction
        - tencent-cloud-cls
        - ai
        - cas-auth
        - zitadel-oidc
  ingress:
    enabled: true
    hosts:
      - host: dashboard.placeholder.com
        paths:
          - /
    tls:
      - secretName: dashboard-placeholder-com-tls
        hosts:
          - dashboard.placeholder.com

# -- Ingress controller configuration
ingress-controller:
  enabled: true

  replicaCount: 3

  config:
    listen:
      host:
    apisix:
      serviceName: apisix-admin
      serviceNamespace: apisix # The namespace where the Apisix admin service is running
      clusterName: "default"
      adminAPIVersion: "v3"
      existingSecret: "apisix-admin-credentials"
      existingSecretAdminKeyKey: "admin"

  serviceMonitor:
    enabled: true

  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1
